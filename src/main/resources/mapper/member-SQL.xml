<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ksj.member.mapper.MemberMapper">

    <!-- 회원목록조회 -->
    <select id="selectMemberList" parameterType="MemberVO" resultType="MemberVO">
        select id, name, cell_phone, email, zip_code, address, status
        from member
        order by id asc
    </select>

    <!-- 회원조회 -->
    <select id="selectMemberOne" parameterType="MemberVO" resultType="MemberVO">
        select id, name, cell_phone, email, zip_code, address, status
        from member
        where id = #{id}
    </select>

    <!-- 등록 -->
    <insert id="registerMember" parameterType="MemberVO">
        INSERT INTO member (id, name, passwd, cell_phone, email, zip_code, address, status, uuid, role) VALUES
        (#{id}, #{name}, #{passwd}, #{cellPhone}, #{email}, #{zipCode}, #{address}, #{status}, #{uuid}, #{role})
    </insert>

    <!-- 아이디 중복체크 -->
    <select id="isDuplicate" parameterType="MemberVO" resultType="int">
        select count(*) as cnt
        from member
        where id = #{id}
    </select>

    <!-- 회원정보수정 -->
    <update id="updateMemberOne" parameterType="MemberVO">
        UPDATE member
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="newPasswd != null">
                passwd = #{newPasswd},
            </if>
            <if test="cellPhone != null">
                cell_phone = #{cellPhone},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="zipCode != null">
                zip_code = #{zipCode},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 기존 비밀번호 확인 -->
    <select id="chkPasswd" parameterType="MemberVO" resultType="MemberVO">
        select passwd
        from member
        where id = #{id}
    </select>

    <!-- 로그인 -->
    <select id="loginMember" parameterType="MemberVO" resultType="int">
        select count(*) as cnt
        from member
        where id = #{id}
        and passwd = #{passwd}
    </select>

    <!-- 이메일인증 상태 업데이트 -->
    <select id="selectMemberUuid" parameterType="MemberVO" resultType="MemberVO">
        select uuid
        from member
        where id = #{id}
    </select>

    <!-- 비밀번호 조회 -->
    <select id="selectMemberPasswd" parameterType="MemberVO" resultType="MemberVO">
        select id, passwd, role
        from member
        where id = #{id}
    </select>
</mapper>